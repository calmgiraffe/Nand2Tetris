function Ball.initialize 0
push constant 1
pop static 0
push constant 1
pop static 1
push constant 7
pop static 2
push constant 0
return
function Ball.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 250
pop this 0
push constant 120
pop this 2
push this 0
push static 2
add
push constant 1
sub
pop this 1
push this 2
push static 2
add
push constant 1
sub
pop this 3
push pointer 0
call Ball.draw 1
pop temp 0
push pointer 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push constant 1
neg
call Screen.setColor 1
pop temp 0
push this 0
push this 2
push this 1
push this 3
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.undraw 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 2
push this 1
push this 3
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.isTouchingPlayer 0
push argument 0
pop pointer 0
push argument 1
call Paddle.getX2 1
push this 0
push constant 1
sub
eq
not
if-goto L0
push this 3
push argument 1
call Paddle.getY1 1
lt
push this 2
push argument 1
call Paddle.getY2 1
gt
or
not
if-goto L2
push constant 0
return
goto L3
label L2
push constant 1
neg
return
push constant 0
pop temp 0
label L3
goto L1
label L0
push constant 0
pop temp 0
label L1
push constant 0
return
function Ball.isTouchingOpponent 0
push argument 0
pop pointer 0
push argument 1
call Paddle.getX1 1
push this 1
push constant 1
add
eq
not
if-goto L4
push this 3
push argument 1
call Paddle.getY1 1
lt
push this 2
push argument 1
call Paddle.getY2 1
gt
or
not
if-goto L6
push constant 0
return
goto L7
label L6
push constant 1
neg
return
push constant 0
pop temp 0
label L7
goto L5
label L4
push constant 0
pop temp 0
label L5
push constant 0
return
function Ball.isTouchingTopEdge 0
push argument 0
pop pointer 0
push this 2
push constant 0
eq
push this 3
push constant 236
eq
or
return
function Ball.isTouchingSides 0
push argument 0
pop pointer 0
push this 0
push constant 0
eq
push this 1
push constant 511
eq
or
return
function Ball.update 0
push argument 0
pop pointer 0
push pointer 0
call Ball.undraw 1
pop temp 0
push this 0
push static 0
add
pop this 0
push this 1
push static 0
add
pop this 1
push this 2
push static 1
add
pop this 2
push this 3
push static 1
add
pop this 3
push pointer 0
call Ball.draw 1
pop temp 0
push pointer 0
push argument 1
call Ball.isTouchingPlayer 2
not
if-goto L8
push static 0
push constant 1
neg
call Math.multiply 2
pop static 0
goto L9
label L8
push constant 0
pop temp 0
label L9
push pointer 0
push argument 2
call Ball.isTouchingOpponent 2
not
if-goto L10
push static 0
push constant 1
neg
call Math.multiply 2
pop static 0
goto L11
label L10
push constant 0
pop temp 0
label L11
push pointer 0
call Ball.isTouchingTopEdge 1
not
if-goto L12
push static 1
push constant 1
neg
call Math.multiply 2
pop static 1
goto L13
label L12
push constant 0
pop temp 0
label L13
push constant 0
return
function Ball.getX1 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getY1 0
push argument 0
pop pointer 0
push this 2
return
function Ball.getX2 0
push argument 0
pop pointer 0
push this 1
return
function Ball.getY2 0
push argument 0
pop pointer 0
push this 3
return
function Ball.getY 0
push argument 0
pop pointer 0
push this 2
push this 3
add
push constant 2
call Math.divide 2
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
